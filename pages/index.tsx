import { Box, HStack, Image, Input, Text, VStack } from '@chakra-ui/react';
import { debounce, isString } from 'lodash';
import type { NextPage, NextPageContext } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { FC, useMemo } from 'react';

import { Game, getGames } from '../src';

export interface HomeProps {
  games: Game[];
  searchQuery: string;
}

const GamesItem: FC<{ game: Game }> = ({ game }) => (
  <Box as="li" sx={{ listStyleType: 'none' }}>
    <HStack spacing={6}>
      <Image alt={game.name} src={game.cover?.url}></Image>
      <Text>{game.name}</Text>
    </HStack>
  </Box>
);

const Home: NextPage<HomeProps> = (props) => {
  const { games, searchQuery } = props;
  const router = useRouter();

  const handleSearchQueryChange = useMemo(
    () =>
      debounce((e) => {
        router.replace(e.target.value ? `/?search=${e.target.value}` : '/');
      }, 100),
    [router],
  );

  return (
    <Box bg="gray.100">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box bg="white" p={6}>
        <Input
          defaultValue={searchQuery}
          onChange={handleSearchQueryChange}
          placeholder="Search for a game"
        />
      </Box>
      <Box p={6}>
        <VStack align="flex-start" as="ul" spacing={4}>
          {games.map((game) => (
            <GamesItem game={game} key={game.id} />
          ))}
        </VStack>
      </Box>
    </Box>
  );
};

export async function getServerSideProps({ query }: NextPageContext) {
  console.log({ query });
  const games = await getGames({
    searchQuery: isString(query.search) ? query.search : '',
  });

  return {
    props: {
      games,
      searchQuery: isString(query.search) ? query.search : '',
    },
  };
}

export default Home;
